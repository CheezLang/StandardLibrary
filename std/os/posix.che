if const @static_assert(@is_os("linux"), "posix.che can only be loaded on linux") {}

#lib("-pthread")

#export_scope

pthread_t :: u64
pthread_attr_t :: struct {
    _ : [56]u8 = default
}
pthread_mutex_t :: struct {
    _ : [40]u8 = default
}
pthread_mutexattr_t :: struct {
    _ : [4]u8 = default
}

PTHREAD_MUTEX_NORMAL        :: 0
PTHREAD_MUTEX_RECURSIVE     :: 1
PTHREAD_MUTEX_ERRORCHECK    :: 2
PTHREAD_MUTEX_ADAPTIVE_NP   :: 3

pthread_create :: (thread: ^pthread_t, attr: ^pthread_attr_t, start_routine: fn(^void) -> ^void, arg: ^void) -> i32;
pthread_self :: () -> pthread_t;
pthread_join :: (thread: pthread_t, value_ptr: ^^void) -> i32;
pthread_cancel :: (thread: pthread_t) -> i32;
pthread_detach :: (thread: pthread_t) -> i32;

pthread_mutex_init :: (mutex: ^pthread_mutex_t, attr: ^pthread_mutexattr_t) -> i32;
pthread_mutex_destroy :: (mutex: ^pthread_mutex_t) -> i32;
pthread_mutex_lock :: (mutex: ^pthread_mutex_t) -> i32;
pthread_mutex_trylock :: (mutex: ^pthread_mutex_t) -> i32;
pthread_mutex_unlock :: (mutex: ^pthread_mutex_t) -> i32;

pthread_mutexattr_init :: (mutex_attr: ^pthread_mutexattr_t) -> i32;
pthread_mutexattr_destroy :: (mutex_attr: ^pthread_mutexattr_t) -> i32;
pthread_mutexattr_settype :: (mutex_attr: ^pthread_mutexattr_t, typ: i32) -> i32;
